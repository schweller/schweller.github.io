{"version":3,"sources":["screens/App/components/Background.js","screens/App/shaders/index.js","screens/App/components/Entry.js","screens/App/components/PastExperience.js","screens/App/components/Skillset.js","screens/App/components/Get-in-touch.js","screens/App/components/Loader.js","screens/App/index.js","serviceWorker.js","index.js"],"names":["Particles","count","useRef","React","useEffect","useState","mount","isAnimating","setAnimating","controls","frameId","width","current","clientWidth","height","clientHeight","mouseX","scene","THREE","camera","position","y","z","gap","x","totalParticles","positions","Float32Array","scales","i","j","ix","iy","generateParticlesPositionScale","geometry","addAttribute","color","lerp","material","uniforms","value","vertexShader","fragmentShader","particles","renderer","antialias","setPixelRatio","window","devicePixelRatio","add","setSize","renderScene","scrollY","lookAt","attributes","array","scale","Math","sin","needsUpdate","render","handleResize","aspect","updateProjectionMatrix","animate","requestAnimationFrame","start","stop","cancelAnimationFrame","appendChild","domElement","addEventListener","e","clientX","innerWidth","touches","length","preventDefault","pageX","removeEventListener","removeChild","remove","dispose","className","ref","onClick","Entry","entry","company","from","entries","PastExperience","map","key","Skillset","links","href","display","GetInTouchLink","link","target","rel","GetInTouch","Loader","dash","useSpring","to","svg","opacity","strokeDasharray","strokeDashoffset","cx","cy","r","pathLength","stroke-width","stroke","App","loading","setLoading","timer","setTimeout","clearTimeout","div","style","interpolate","o","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.16dd575e.chunk.js","sourcesContent":["import React from 'react';\nimport * as THREE from 'three'\nimport { vertexShader, fragmentShader } from '../shaders'\n\nconst generateParticlesPositionScale = (gap, x, y) => {\n  const totalParticles = x * y\n  let positions = new Float32Array( totalParticles * 3 )\n  let scales = new Float32Array( totalParticles )\n  let i = 0, j = 0;\n  for ( let ix = 0; ix < x; ix++ ) {\n    for ( let iy = 0; iy < y; iy++ ) {\n      positions[ i ] = ix * gap - ( ( x * gap ) / 2 ) // x\n      positions[ i + 1 ] = 0 // y\n      positions[ i + 2 ] = iy * gap - ( ( y * gap ) / 2 ) // z\n      scales[ j ] = 1\n      i += 3\n      j ++\n    }\n  }\n\n  return { positions, scales }\n} \n\nconst Particles = () => {\n  let count=0\n  const { useRef, useEffect, useState } = React\n  const mount = useRef(null)\n  const [isAnimating, setAnimating] = useState(true)\n  const controls = useRef(null)\n  \n  useEffect(() => {\n    let width = mount.current.clientWidth\n    let height = mount.current.clientHeight\n    let mouseX = 1\n    let frameId\n\n    const scene = new THREE.Scene()\n    const camera = new THREE.PerspectiveCamera(75, width / height, 1, 10000)\n    camera.position.y = 1000\n    camera.position.z = 100\n    \n    const SEPARATION = 100, AMOUNTX = 300, AMOUNTY = 200\n    const { positions, scales } = generateParticlesPositionScale(SEPARATION, AMOUNTX, AMOUNTY)\n    \n    const geometry = new THREE.BufferGeometry();\n    geometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ))\n    geometry.addAttribute( 'scale', new THREE.BufferAttribute( scales, 1 ) )\n    \n    const color = new THREE.Color(\"rgb(255,0,0)\")\n    color.lerp(new THREE.Color(\"rgb(0,255,0)\"), 0.5)\n    \n    const material = new THREE.ShaderMaterial( {\n      uniforms: {\n        color: { value: color }\n      },\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader\n    })\n\n    let particles = new THREE.Points(geometry, material)   \n    \n    const renderer = new THREE.WebGLRenderer({antialias: true})\n    renderer.setPixelRatio(window.devicePixelRatio)\n    scene.add(particles) \n    renderer.setSize(width, height)\n\n    const renderScene = () => {\n      camera.position.x += ( mouseX - camera.position.x ) * .05\n      camera.position.y += ( - (window.scrollY*10) - camera.position.y ) * .05\n      //Clamp camera's y position\n      if (camera.position.y<1000) {\n        camera.position.y=1000\n      }\n      camera.position.z += ( - (window.scrollY*10) - camera.position.z ) * .05\n      //Clamp camera's z position\n      if (camera.position.z<-12000) {\n        camera.position.z = -12000        \n      }\n      camera.lookAt( scene.position )\n      var positions = particles.geometry.attributes.position.array\n      var scales = particles.geometry.attributes.scale.array\n      var i = 0, j = 0;\n      for ( var ix = 0; ix < AMOUNTX; ix ++ ) {\n        for ( var iy = 0; iy < AMOUNTY; iy ++ ) {\n          positions[ i + 1 ] = ( Math.sin( ( ix + count ) * 0.3 ) * 50 ) +\n            ( Math.sin( ( iy + count ) * 0.5 ) * 50 )\n          scales[ j ] = ( Math.sin( ( ix + count ) * 0.1 ) + 1 ) * 3 +\n            ( Math.sin( ( iy + count ) * 0.1 ) + 1 ) * 3\n          i += 3;\n          j ++;\n        }\n      }\n      particles.geometry.attributes.position.needsUpdate = true;\n      particles.geometry.attributes.scale.needsUpdate = true;\n      renderer.render(scene, camera)\n      count+=0.05\n    }\n\n    const handleResize = () => {\n      width = mount.current.clientWidth \n      height = mount.current.clientHeight\n      renderer.setSize(width, height)\n      camera.aspect = width / height\n      camera.updateProjectionMatrix()\n      renderScene()\n    }\n    \n    const handleMouseMove = (e) => {\n      mouseX = e.clientX - window.innerWidth / 2\n    }\n    \n    const handleTouchStart = (e) => {\n      if (e.touches.length === 1) {\n        e.preventDefault();\n        mouseX = e.touches[0].pageX - window.innerWidth / 2\n      }\n    }\n    \n    const handleTouchMove = (e) => {\n      if (e.touches.length === 1) {\n        e.preventDefault();\n        mouseX = e.touches[0].pageX - window.innerWidth / 2\n      }\n    }   \n    \n    const animate = () => {\n      renderScene()\n      frameId = window.requestAnimationFrame(animate)\n    }\n\n    const start = () => {\n      if (!frameId) {\n        frameId = requestAnimationFrame(animate)\n      }\n    }\n\n    const stop = () => {\n      cancelAnimationFrame(frameId)\n      frameId = null\n    }\n\n    mount.current.appendChild(renderer.domElement)\n    window.addEventListener('resize', handleResize)\n    window.addEventListener('mousemove', handleMouseMove)\n    window.addEventListener('touchstart', handleTouchStart)\n    window.addEventListener('touchmove', handleTouchMove)\n    start()\n\n    controls.current = { start, stop }\n    \n    return () => {\n      stop()\n      window.removeEventListener('resize', handleResize)\n      mount.current.removeChild(renderer.domElement)\n\n      scene.remove(particles)\n      geometry.dispose()\n      material.dispose()\n    }\n  }, [])\n\n  useEffect(() => {\n    if (isAnimating) {\n      controls.current.start()\n    } else {\n      controls.current.stop()\n    }\n  }, [isAnimating])\n  \n  return <div className=\"Particles\" ref={mount} onClick={() => setAnimating(!isAnimating)} />\n}\n\nexport default Particles\n","export const vertexShader = ` \nattribute float scale;\nvoid main() {\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n    gl_PointSize = scale * ( 500.0 / - mvPosition.z );\n    gl_Position = projectionMatrix * mvPosition;\n}\n`\n\nexport const fragmentShader = `\nuniform vec3 color;\nvoid main() {\n    if ( length( gl_PointCoord - vec2( 0.5, 0.5 ) ) > 0.475 ) discard;\n    gl_FragColor = vec4( color, 1.0 );\n}\n`","import React from 'react';\n\nfunction Entry({entry}) {\n  return (\n    <div className=\"Entry\">\n      <h4 className=\"rubik\">{entry.position} @ {entry.company}</h4>\n      <div className=\"Entry-from\">\n        <h5 className=\"roboto-mono light\">{entry.from}</h5>\n      </div>\n    </div>\n  )\n}\n\nexport default Entry;","import React from 'react'\nimport Entry from './Entry'\n\nconst entries = [\n  {\n    position: \"Senior Software Engineer\",\n    company: \"Sonia\",\n    from: \"June 2019 - Current\"\n  },\n  {\n    position: \"Senior Software Engineer\",\n    company: \"Fanatics\",\n    from: \"September 2017 - April 2019\"\n  },\n  {\n    position: \"Software Engineer\",\n    company: \"Avenue Code\",\n    from: \"June 2015 - July 2017\"\n  },\n  {\n    position: \"Frontend Developer\",\n    company: \"PSafe Tecnologia\",\n    from: \"September 2014 - June 2015\"\n  },\n  {\n    position: \"Frontend Developer\",\n    company: \"Infoglobo\",\n    from: \"February 2011 - September 2014\"\n  }  \n]\n\nfunction PastExperience() {\n  return (\n    <div className=\"PastExperience\">\n      <h3 className=\"roboto-mono light\">work experience></h3>\n      {entries.map((entry, key) => {\n        return <Entry key={key} entry={entry}/>\n      })}\n    </div>\n  )\n}\n\nexport default PastExperience","import React from 'react'\n\nfunction Skillset() {\n  return (\n    <div className=\"Skillset\">\n      <h3 className=\"roboto-mono light\">core & technical skills></h3>          \n      <div className=\"Entry\">\n        <h4 className=\"rubik\">Front-end</h4>\n        <div className=\"Entry-from\">\n          <h5 className=\"roboto-mono light\">JavaScript, React, Vue, CSS, GraphQL, ThreeJS</h5>\n        </div>\n      </div>\n      <div className=\"Entry\">\n        <h4 className=\"rubik\">Back-end</h4>\n        <div className=\"Entry-from\">\n          <h5 className=\"roboto-mono light\">NodeJS, MySQL, NoSQL, Redis</h5>\n        </div>\n      </div>\n      <div className=\"Entry\">\n        <h4 className=\"rubik\">DevOps</h4>\n        <div className=\"Entry-from\">\n          <h5 className=\"roboto-mono light\">Docker, AWS, NGINX, Jenkins, CircleCI, Terraform</h5>\n        </div>\n      </div>\n      <div className=\"Entry\">\n        <h4 className=\"rubik\">Apps</h4>\n        <div className=\"Entry-from\">\n          <h5 className=\"roboto-mono light\">React Native, Electron, Flutter</h5>\n        </div>\n      </div>\n    </div> \n  )\n}\n\nexport default Skillset","import React from 'react'\n\nconst links = [\n  {\n    href: `https://github.com/schweller`,\n    display: `Github` \n  },\n  {\n    href: `https://codepen.io/schweller/`,\n    display: `Codepen` \n  },\n  {\n    href: `https://thesunda.itch.io/`,\n    display: `My games` \n  },\n  {\n    href: `https://www.linkedin.com/in/ischweller/`,\n    display: `LinkedIn`\n  },\n  {\n    href: `https://stackoverflow.com/users/4957796/inacio-schweller`,\n    display: `Stack Overflow`\n  },\n  {\n    href: `/inacio-schweller-resume.pdf`,\n    display: `Full Resumé`\n  }\n]\n\nfunction GetInTouchLink({link}) {\n  return (\n    <li>\n      <a \n        className=\"underline-wave\"\n        target=\"_blank\" \n        rel=\"noopener noreferrer\"\n        href={link.href}>\n        {link.display}\n      </a>\n    </li>\n  )  \n}\n\nfunction GetInTouch() {\n  return (\n    <>\n      <p>You will find me @</p>\n      <ul>\n        {links.map((link, key) => <GetInTouchLink key={key} link={link}/>)}\n      </ul>\n      What's next? Say <a className=\"underline-wave\" href=\"mailto:hi@inacio.dev\">hi@inacio.dev</a>! \n    </>\n  )\n}\n\nexport default GetInTouch","import React from 'react';\nimport { useSpring, animated } from 'react-spring'\n\nexport default function Loader() {\n  const { dash } = useSpring({\n    from: { dash: 102 },\n    to: { dash: 0 }\n  })\n \n  return (\n    <animated.svg opacity=\".5\" height=\"60\" width=\"60\" strokeDasharray={100} strokeDashoffset={dash}>\n      <circle cx=\"30\" cy=\"30\" r=\"20\" pathLength=\"100\" stroke-width=\"5\" stroke=\"red\"/>\n    </animated.svg>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSpring, animated } from 'react-spring'\nimport Particles from './components/Background'\nimport PastExperience from './components/PastExperience'\nimport Skillset from './components/Skillset'\nimport GetInTouch from './components/Get-in-touch'\nimport Loader from './components/Loader'\nimport './App.css';\n\nfunction App () {\n  const [loading, setLoading] = useState(true)\n  \n  const { opacity } = useSpring({\n    opacity: loading ? 0 : 1\n  })\n\n  useEffect(() => {\n    let timer = setTimeout(() => setLoading(false), 800)\n    return () => clearTimeout(timer)\n  }, [])\n\n  return loading ?\n      <div className=\"loader\"><Loader/></div> :\n      <animated.div className=\"App\" style={{opacity: opacity.interpolate(o => 0 + o) }}>\n        <Particles />\n        <div className=\"Hero\">\n          <div className=\"Row\">\n            <div className=\"Hero-intro Column\">\n              <div className=\"roboto-mono light align-left\">\n                <p>Hello! I'm Inacio. I work and freelance as software engineer</p>\n                <p>I've proudly collaborated with awesome companies.</p>\n              </div>       \n            </div>\n            <div className=\"Hero-contact Column\">\n              <GetInTouch />\n            </div>\n          </div>\n        </div>\n        <div className=\"Scroll\">\n          <Skillset />\n          <PastExperience/>\n          <div className=\"Footer\">\n            <p className=\"roboto-mono light\">Made with React, ThreeJS and React-Spring by yours truly. © 2019</p>\n          </div>\n        </div>\n      </animated.div>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './screens/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}